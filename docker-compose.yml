version: '3.8'
   
services:

  frontend:
    labels:
      shipyard.route: '/'
    build: 'frontend'
    environment:
      CI: 'true'
      DANGEROUSLY_DISABLE_HOST_CHECK: 'true'
    env_file:
      - frontend/frontend.env
    volumes:
      - './frontend/src:/app/src'
      - './frontend/public:/app/public'
    ports:
      - '3000:3000'

  backend:
    labels:
      shipyard.init: 'poetry run python src/manage.py migrate'
      shipyard.route: '/api'
    build: 'backend'
    volumes:
      - './backend/src:/srv/src/'
      - './backend/poetry.lock:/srv/poetry.lock/'
      - './backend/pyproject.toml:/srv/pyproject.toml/'
    environment:
      LOCALSTACK_HOST: 'localstack'
    ports:
      - '8080:8080'
    depends_on:
      - postgres

  postgres:
    image: 'postgres:9.6.20-alpine'
    restart: always
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=obscure-user
      - POSTGRES_PASSWORD=obscure-password
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '5432'

  localstack:
    image: 'localstack/localstack'
    environment:
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - 'localstack:/tmp/localstack'
    ports:
      - '4566'

volumes:
  postgres:
  localstack:
